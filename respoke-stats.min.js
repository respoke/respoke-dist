/*! Copyright (c) 2014, Digium, Inc. All Rights Reserved. MIT Licensed. For all details and documentation: https://www.respoke.io */
!function(factory){"use strict";"function"==typeof define&&define.amd?define(["respoke"],factory):factory("object"==typeof exports?require("respoke"):respoke)}(function(respoke){"use strict";var log=respoke.log;respoke.MediaStats=function(params){function format(report,aliases){return Object.keys(aliases).forEach(function(oldName){var name;"string"==typeof aliases[oldName]?(report[aliases[oldName]]=report[oldName],delete report[oldName]):"object"==typeof aliases[oldName]&&(name=oldName,aliases[oldName].newname&&(report[aliases[oldName].newname]=report[oldName],name=aliases[oldName].newname,delete report[oldName]),aliases[oldName].members&&format(report[name],aliases[oldName].members))}),report.connection&&(report.connection.foundIncomingNetworkPaths="true"===report.connection.foundIncomingNetworkPaths,report.connection.foundOutgoingNetworkPaths="true"===report.connection.foundOutgoingNetworkPaths),report}params=JSON.parse(JSON.stringify(params||{}));var aliases={cons:{newname:"connection",members:{googChannelId:"channelId",googLocalAddress:"localHost",googRemoteAddress:"remoteHost",googLocalCandidateType:"localMediaPath",googRemoteCandidateType:"remoteMediaPath",googReadable:"foundIncomingNetworkPaths",googRtt:"roundTripTime",googTransportType:"transport",googWritable:"foundOutgoingNetworkPaths"}},localaudio:{members:{googCodecName:"codec",bytesSent:"totalBytesSent",packetsSent:"totalPacketsSent"}},localvideo:{members:{googCodecName:"codec",bytesSent:"totalBytesSent",packetsSent:"totalPacketsSent"}},remoteaudio:{members:{googCodecName:"codec",bytesReceived:"totalBytesReceived",packetsReceived:"totalPacketsReceived"}},remotevideo:{members:{googCodecName:"codec",bytesReceived:"totalBytesReceived",packetsReceived:"totalPacketsReceived"}}};return format(params,aliases)},respoke.MediaStatsParser=function(params){function startsWith(string,value){return string&&string.slice&&string.slice(0,value.length)===value}function initStats(){var sdp={};return pc&&pc.remoteDescription&&pc.remoteDescription.sdp&&pc.localDescription&&pc.localDescription.sdp?(sdp={remote:pc.remoteDescription.sdp,local:pc.localDescription.sdp},Object.keys(sdp).forEach(function(side){var rsdp=sdp[side],lines=rsdp.split("\r\n"),mediaType=null;Object.keys(lines).forEach(function(lineIndex){var line=lines[lineIndex],lbits=null,ssrc=null;startsWith(line,"m=")?mediaType=line.substring(2,7):startsWith(line,"a=ssrc:")&&(lbits=line.split(" "),ssrc=lbits[0].substring("a=ssrc:".length),interestingStats[side+mediaType]&&0===interestingStats[side+mediaType].match.value.length&&(interestingStats[side+mediaType].match.value=ssrc))})}),void(params.onStats?timer=setInterval(function(){that.getStats().done(params.onStats,function(err){log.error("error in getStats",err.message,err.stack)})},statsInterval):log.warn("Not starting stats, no onStats callback provided."))):void log.warn("missing info.")}function buildStats(rawStats){var stats=rawStats,results=stats.result(),allStats={state:{iceGatheringState:pc.icegatheringState,iceConnectionState:pc.iceConnectionState}};return Object.keys(interestingStats).forEach(function(statType){var eachStat={},rule=interestingStats[statType],report=results.filter(function(result){var typeMatch=result.type===rule.type,keyMatch=result.stat(rule.match.key)===rule.match.value;return typeMatch&&keyMatch});report.length>0&&(report[0].timestamp&&(allStats.timestamp=report[0].timestamp,allStats.periodLength=allStats.timestamp-oldStats.timestamp),rule.keys.forEach(function(key){var testInt=parseInt(report[0].stat(key),10);isNaN(testInt)?eachStat[key]=report[0].stat(key):eachStat[key]=testInt,deltas[key]&&oldStats&&oldStats[statType]&&-1===[null,void 0].indexOf(oldStats[statType][key])&&(eachStat["period"+key.charAt(0).toUpperCase()+key.slice(1)]=eachStat[key]-oldStats[statType][key])})),allStats[statType]=eachStat}),oldStats=allStats,allStats}params=params||{};var that=respoke.Class(params);that.className="respoke.MediaStatsParser";var oldStats=!1,pc=params.peerConnection;delete params.peerConnection;var timer=0,statsInterval=params.interval||5e3,interestingStats={cons:{type:"googCandidatePair",match:{key:"googActiveConnection",value:"true"},keys:["googWritable","googReadable","googTransportType","googLocalCandidateType","googRemoteCandidateType","googRemoteAddress","googLocalAddress","googRtt","googChannelId"]},localaudio:{type:"ssrc",match:{key:"ssrc",value:""},keys:["audioInputLevel","packetsSent","bytesSent","transportId","googCodecName"]},remoteaudio:{type:"ssrc",match:{key:"ssrc",value:""},keys:["audioOutputLevel","packetsReceived","packetsLost","bytesReceived","transportId"]},remotevideo:{type:"ssrc",match:{key:"ssrc",value:""},keys:["packetsReceived","packetsLost","bytesReceived","transportId"]},localvideo:{type:"ssrc",match:{key:"ssrc",value:""},keys:["packetsSent","bytesSent","transportId","googCodecName"]}},deltas={packetsSent:!0,bytesSent:!0,packetsReceived:!0,bytesReceived:!0};return that.getStats=function(params){params=params||{};var deferred=respoke.Q.defer(),retVal=respoke.handlePromise(deferred.promise,params.onSuccess,params.onError),args=[];return pc.getStats?(navigator.mozGetUserMedia&&args.push(null),args.push(function(stats){deferred.resolve(respoke.MediaStats(buildStats(stats)))}),args.push(function(err){log.error(err),deferred.reject(new Error("Can't get stats."))}),pc.getStats.apply(pc,args),retVal):(deferred.reject(new Error("no peer connection getStats()")),retVal)},that.stopStats=function(){clearInterval(timer)},initStats(),that}});
//# sourceMappingURL=respoke-stats.min.map
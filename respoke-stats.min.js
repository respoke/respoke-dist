/*! Copyright (c) 2014, Digium, Inc. All Rights Reserved. MIT Licensed. For all details and documentation: https://www.respoke.io */
!function(e){"use strict";"function"==typeof define&&define.amd?define(["respoke"],e):e("object"==typeof exports?require("respoke"):respoke)}(function(e){"use strict";var t=e.log;e.MediaStats=function(e){function t(e,n){return Object.keys(n).forEach(function(o){var r;"string"==typeof n[o]?(e[n[o]]=e[o],delete e[o]):"object"==typeof n[o]&&(r=o,n[o].newname&&(e[n[o].newname]=e[o],r=n[o].newname,delete e[o]),n[o].members&&t(e[r],n[o].members))}),e.connection&&(e.connection.foundIncomingNetworkPaths="true"===e.connection.foundIncomingNetworkPaths,e.connection.foundOutgoingNetworkPaths="true"===e.connection.foundOutgoingNetworkPaths),e}e=JSON.parse(JSON.stringify(e||{}));var n={cons:{newname:"connection",members:{googChannelId:"channelId",googLocalAddress:"localHost",googRemoteAddress:"remoteHost",googLocalCandidateType:"localMediaPath",googRemoteCandidateType:"remoteMediaPath",googReadable:"foundIncomingNetworkPaths",googRtt:"roundTripTime",googTransportType:"transport",googWritable:"foundOutgoingNetworkPaths"}},localaudio:{members:{googCodecName:"codec",bytesSent:"totalBytesSent",packetsSent:"totalPacketsSent"}},localvideo:{members:{googCodecName:"codec",bytesSent:"totalBytesSent",packetsSent:"totalPacketsSent"}},remoteaudio:{members:{googCodecName:"codec",bytesReceived:"totalBytesReceived",packetsReceived:"totalPacketsReceived"}},remotevideo:{members:{googCodecName:"codec",bytesReceived:"totalBytesReceived",packetsReceived:"totalPacketsReceived"}}};return t(e,n)},e.MediaStatsParser=function(n){function o(e,t){return e&&e.slice&&e.slice(0,t.length)===t}function r(){var e={};return c&&c.remoteDescription&&c.remoteDescription.sdp&&c.localDescription&&c.localDescription.sdp?(e={remote:c.remoteDescription.sdp,local:c.localDescription.sdp},Object.keys(e).forEach(function(t){var n=e[t],r=n.split("\r\n"),i=null;Object.keys(r).forEach(function(e){var n=r[e],a=null,s=null;o(n,"m=")?i=n.substring(2,7):o(n,"a=ssrc:")&&(a=n.split(" "),s=a[0].substring("a=ssrc:".length),l[t+i]&&0===l[t+i].match.value.length&&(l[t+i].match.value=s))})}),void(n.onStats?u=setInterval(function(){a.getStats().done(n.onStats,function(e){t.error("error in getStats",e.message,e.stack)})},d):t.warn("Not starting stats, no onStats callback provided."))):void t.warn("missing info.")}function i(e){var t=e,n=t.result(),o={state:{iceGatheringState:c.icegatheringState,iceConnectionState:c.iceConnectionState}};return Object.keys(l).forEach(function(e){var t={},r=l[e],i=n.filter(function(e){var t=e.type===r.type,n=e.stat(r.match.key)===r.match.value;return t&&n});i.length>0&&(i[0].timestamp&&(o.timestamp=i[0].timestamp,o.periodLength=o.timestamp-s.timestamp),r.keys.forEach(function(n){var o=parseInt(i[0].stat(n),10);isNaN(o)?t[n]=i[0].stat(n):t[n]=o,p[n]&&s&&s[e]&&-1===[null,void 0].indexOf(s[e][n])&&(t["period"+n.charAt(0).toUpperCase()+n.slice(1)]=t[n]-s[e][n])})),o[e]=t}),s=o,o}n=n||{};var a=e.Class(n);a.className="respoke.MediaStatsParser";var s=!1,c=n.peerConnection;delete n.peerConnection;var u=0,d=n.interval||5e3,l={cons:{type:"googCandidatePair",match:{key:"googActiveConnection",value:"true"},keys:["googWritable","googReadable","googTransportType","googLocalCandidateType","googRemoteCandidateType","googRemoteAddress","googLocalAddress","googRtt","googChannelId"]},localaudio:{type:"ssrc",match:{key:"ssrc",value:""},keys:["audioInputLevel","packetsSent","bytesSent","transportId","googCodecName"]},remoteaudio:{type:"ssrc",match:{key:"ssrc",value:""},keys:["audioOutputLevel","packetsReceived","packetsLost","bytesReceived","transportId"]},remotevideo:{type:"ssrc",match:{key:"ssrc",value:""},keys:["packetsReceived","packetsLost","bytesReceived","transportId"]},localvideo:{type:"ssrc",match:{key:"ssrc",value:""},keys:["packetsSent","bytesSent","transportId","googCodecName"]}},p={packetsSent:!0,bytesSent:!0,packetsReceived:!0,bytesReceived:!0};return a.getStats=function(n){n=n||{};var o=e.Q.defer(),r=e.handlePromise(o.promise,n.onSuccess,n.onError),a=[];return c.getStats?(navigator.mozGetUserMedia&&a.push(null),a.push(function(t){o.resolve(e.MediaStats(i(t)))}),a.push(function(e){t.error(e),o.reject(new Error("Can't get stats."))}),c.getStats.apply(c,a),r):(o.reject(new Error("no peer connection getStats()")),r)},a.stopStats=function(){clearInterval(u)},r(),a}});
//# sourceMappingURL=respoke-stats.min.map